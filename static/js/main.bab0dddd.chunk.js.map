{"version":3,"sources":["component/event_list/index.js","component/event_form/index.js","index.js"],"names":["EVENTDATA","EventList","props","filterUpdated","newData","filtersObject","setState","state","eventList","eventListData","bind","localStorage","getItem","JSON","parse","upddatedData","this","elementsHtml","map","item","index","key","className","name","style","width","description","venue","price","discount","length","rows","onFilterUpdate","filterkey","casesensitive","showsearch","alignleft","React","Component","EventForm","regex","RegExp","initialValues","validate","values","errors","match","onSubmit","setSubmitting","array","push","setItem","stringify","setTimeout","window","location","reload","touched","handleChange","handleBlur","handleSubmit","isSubmitting","resetForm","type","onChange","onBlur","value","autoComplete","required","disabled","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bab0dddd.chunk.js","sourcesContent":["import React from 'react';\nimport TableFilter from 'react-table-filter';\nimport \"react-table-filter/lib/styles.css\";\n\nlet EVENTDATA;\n\nexport default class EventList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           eventList: [],\n           eventListData: [],\n        };\n        this.filterUpdated = this.filterUpdated.bind(this);\n        EVENTDATA = [];\n    }\n\n    \n\n    filterUpdated = (newData, filtersObject) => {\n        this.setState({\n\t\t\t\"upddatedData\": newData\n\t\t});\n    }\n    \n    render() {\n        EVENTDATA = localStorage.getItem(\"Data\") ? JSON.parse(localStorage.getItem(\"Data\")) : [];\n\n        const upddatedData = this.state.upddatedData;\n        if(upddatedData){\n            EVENTDATA = upddatedData\n        }\n        const elementsHtml = EVENTDATA.map((item, index) => {\n          return (\n            <tr key={'row_'+index}>\n              <td className=\"cell\">\n                { item.name }\n              </td>\n              <td className=\"cell\" style={{width: \"200px\"}}>\n                { item.description }\n              </td>\n              <td className=\"cell\">\n                { item.venue }\n              </td>\n              <td className=\"cell\">\n                { item.price }\n              </td>\n              <td className=\"cell\">\n                { item.discount }\n              </td>\n            </tr>\n          );\n        });\n        return (\n          (EVENTDATA && EVENTDATA.length > 0 ?\n          <div>\n           <div className=\"examples\">\n              <div className=\"wrapper\">\n                  <h1>Event Listing</h1>\n                  <div className=\"scroll-table\">\n                    <table className=\"basic-table\">\n                        <thead>\n                            <TableFilter\n                            rows={EVENTDATA}\n                            onFilterUpdate={this.filterUpdated}>\n                            <th key=\"name\" filterkey=\"name\" className=\"cell\" casesensitive={'true'} showsearch={'true'} >\n                                Name\n                            </th>\n                            <th key=\"description\" filterkey=\"description\" className=\"cell\">\n                                Description\n                            </th>\n                            <th key=\"venue\" filterkey=\"venue\" className=\"cell\" alignleft={'true'}>\n                                Venue\n                            </th>\n                            <th key=\"price\" filterkey=\"price\" className=\"cell\" alignleft={'true'}>\n                                Price\n                            </th>\n                            <th key=\"discount\" filterkey=\"discount\" className=\"cell\" alignleft={'true'}>\n                                Discount\n                            </th>\n                            </TableFilter>\n                        </thead>\n                        <tbody>\n                            { elementsHtml }\n                        </tbody>\n                    </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          :\n          \"\"\n            )\n        );\n      }\n}\n","import React from 'react';\n// third-party imports\nimport { Formik } from 'formik';\n\n\nexport default class EventForm extends React.Component {\n    \n    render() {\n        let regex =  new RegExp('^[0-9]+$');\n       return (\n        \n        <div className=\"centred-form\">\n        <h1>Event Form</h1>\n        <Formik\n          \n          initialValues={{ name: '', description: '',venue:'',price:'',discount:'' }}\n          validate={values => {\n            const errors = {};\n            if (!values.name) {\n              errors.name = 'This field is mandetory';\n            } \n            if (!values.description) {\n                errors.description = 'This field is mandetory';\n            } \n            if (!values.venue) {\n                errors.venue = 'This field is mandetory';\n            } \n            // if (!values.price.match(regex)) {\n            //     errors.price = 'Please enter a number';\n            // } \n            if (!values.price) {\n                errors.price = 'This field is mandetory';\n            } \n            if (!values.discount.match(regex)) {\n                errors.discount = 'Please enter a number';\n            } \n            return errors;\n          }}\n          \n          onSubmit={(values, { setSubmitting }) => {\n            var array = JSON.parse(localStorage.getItem('Data') || '[]');\n            array.push(values);\n            localStorage.setItem('Data', JSON.stringify(array));\n            setTimeout(() => {\n              setSubmitting(true);\n              window.location.reload();\n            }, 400);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            resetForm\n            /* and other goodies */\n          }) => (\n            <form onSubmit={handleSubmit}>\n                <div className=\"field\">\n                    <fieldset className=\"material\">\n                        <input type=\"name\" name=\"name\"  onChange={handleChange} onBlur={handleBlur} value={values.name} autoComplete=\"off\" required />\n                        <hr></hr>\n                        <label>Event Name</label>\n                    </fieldset>\n                    <span>{errors.name && touched.name && errors.name}</span>\n                </div>\n                <div className=\"field\">\n                    <fieldset className=\"material\">\n                        <input type=\"description\" name=\"description\"  onChange={handleChange} onBlur={handleBlur} value={values.description} autoComplete=\"off\" required />\n                        <hr></hr>\n                        <label>Description</label>\n                    </fieldset>\n                    <span>{errors.description && touched.description && errors.description}</span>\n                </div>\n                <div className=\"field\">\n                    <fieldset className=\"material\">\n                        <input type=\"venue\" name=\"venue\"  onChange={handleChange} onBlur={handleBlur} value={values.venue} autoComplete=\"off\" required />\n                        <hr></hr>\n                        <label>Venue</label>\n                    </fieldset>\n                    <span>{errors.venue && touched.venue && errors.venue}</span>\n                </div>\n                <div className=\"field\">\n                    <fieldset className=\"material\">\n                        <input type=\"price\" name=\"price\"  onChange={handleChange} onBlur={handleBlur} value={values.price} autoComplete=\"off\" required />\n                        <hr></hr>\n                        <label>Price</label>\n                    </fieldset>\n                    <span>{errors.price && touched.price && errors.price}</span>\n                </div>\n                <div className=\"field\">\n                    <fieldset className=\"material\">\n                        <input type=\"discount\" name=\"discount\"  onChange={handleChange} onBlur={handleBlur} value={values.discount} autoComplete=\"off\" required />\n                        <hr></hr>\n                        <label>Discount</label>\n                    </fieldset>\n                    <span>{errors.discount && touched.discount && errors.discount}</span>\n                </div>\n              <button type=\"submit\" disabled={isSubmitting} className=\"submit\">\n                Submit\n              </button>\n              <button type=\"reset\" onClick={resetForm} className=\"reset\">\n                Clear\n              </button>\n            </form>\n          )}\n        </Formik>\n      </div>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './responsive.css';\nimport EventList from './component/event_list/index';\nimport EventForm from './component/event_form/index';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <EventList />\n    <EventForm />\n  </React.StrictMode>,\n  document.getElementById('App')\n);\n"],"sourceRoot":""}